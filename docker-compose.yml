version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: macl_vms
      MYSQL_USER: macl
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: unless-stopped
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      APP_KEY: base64:random-generated-key
      DB_CONNECTION: mysql
      DB_HOST: mysql_db
      DB_PORT: 3306
      DB_DATABASE: macl_vms
      DB_USERNAME: macl
      DB_PASSWORD: password
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis_cache
      REDIS_PORT: 6379
    ports:
      - "9000:9000"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
      - backend_cache:/var/www/html/bootstrap/cache
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs_app
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: "https://arrevos.com"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
  backend_storage:
  backend_cache:
